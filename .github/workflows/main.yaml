name: 'SWM GitHub Actions Basic' # 없어도됨, 하지만 없으면 찾기 힘듦, 외부에서 이 github action API 호출할 때도 사용

on: push # 필수 # trigger : push 했을 때 실행시켜라
#on : ['push', 'pull_request'] # 배열로 만들면 trigger 추가 실행 가능

env:
  GLOBAL_LEVEL: "This value comes from the GLOBAL level" # 환경변수 구성 # 위치마다 scope가 다르다 ex)local, global 변수같은것
  # global 레벨은 어디서든 접근 가능

jobs: # 필수 # 이 workflow로 하겠다
  first-job: # second-job 등 원하는 만큼 추가 가능 # job마다 격리된 빌드 서버가 돌아감 # 각 서버끼리 전달이 안 됨
    name: 'First Job' # job 마다 이름

    runs-on: ubuntu-latest # windows or ubuntu or mac

    env:
      JOB_LEVEL_1: "This value comes from the JOB level1" # JOB 레벨에서만 접근 가능한 변수
    steps: # 배열 요소 하나하나가 task=action # 하다 실패하면 뒤에꺼는 실행 안 됨(default)(실패해도 계속 실행하게 할 수도 있음)
    - name: Say Hello World 1 
      shell: bash # shell은 편한거 써도 됨

      env:
        STEP_LEVEL_1: "This value comes from the STEP level1"
      run: |
        echo "Hello World from step 1" # 이건 하드코딩 # 보통은 변수들을 끌어와서 작업 
        echo "GLOBAL : Hello World from ${{env.GLOBAL_LEVEL}}"
        echo "JOB 1 : Hello World from ${{env.JOB_LEVEL_1}}"
        echo "JOB 2 : Hello World from ${{env.JOB_LEVEL_2}}"
        echo "STEP 1 : Hello World from ${{env.STEP_LEVEL_1}}"
        echo "STEP 2 : Hello World from ${{env.STEP_LEVEL_2}}"

    - name: Say Hello World 2
      shell: pwsh
      env:
        STEP_LEVEL_2: "This value comes from the STEP level2"
      run: |
        echo "Hello World from step 2"
        echo "GLOBAL : Hello World from ${{env.GLOBAL_LEVEL}}"
        echo "JOB 1 : Hello World from ${{env.JOB_LEVEL_1}}"
        echo "JOB 2 : Hello World from ${{env.JOB_LEVEL_2}}"
        echo "STEP 1 : Hello World from ${{env.STEP_LEVEL_1}}"
        echo "STEP 2 : Hello World from ${{env.STEP_LEVEL_2}}"

  second-job: # second-job 등 원하는 만큼 추가 가능 # job마다 격리된 빌드 서버가 돌아감 # 각 서버끼리 전달이 안 됨
    name: 'Second Job' # job 마다 이름

    runs-on: ubuntu-latest # windows or ubuntu or mac

    env:
      JOB_LEVEL_2: "This value comes from the JOB level2"
    steps: # 배열 요소 하나하나가 task=action # 하다 실패하면 뒤에꺼는 실행 안 됨(default)(실패해도 계속 실행하게 할 수도 있음)
    - name: Say Hello World 1 
      shell: bash # shell은 편한거 써도 됨

      env:
        STEP_LEVEL_1: "This value comes from the STEP level1"
      run: |
        echo "Hello World from step 1" # 이건 하드코딩 # 보통은 변수들을 끌어와서 작업 
        echo "GLOBAL : Hello World from ${{env.GLOBAL_LEVEL}}"
        echo "JOB 1 : Hello World from ${{env.JOB_LEVEL_1}}"
        echo "JOB 2 : Hello World from ${{env.JOB_LEVEL_2}}"
        echo "STEP 1 : Hello World from ${{env.STEP_LEVEL_1}}"
        echo "STEP 2 : Hello World from ${{env.STEP_LEVEL_2}}"

    - name: Say Hello World 2
      shell: pwsh
      env:
        STEP_LEVEL_2: "This value comes from the STEP level2"
      run: |
        echo "Hello World from step 2"
        echo "GLOBAL : Hello World from ${{env.GLOBAL_LEVEL}}"
        echo "JOB 1 : Hello World from ${{env.JOB_LEVEL_1}}"
        echo "JOB 2 : Hello World from ${{env.JOB_LEVEL_2}}"
        echo "STEP 1 : Hello World from ${{env.STEP_LEVEL_1}}"
        echo "STEP 2 : Hello World from ${{env.STEP_LEVEL_2}}"